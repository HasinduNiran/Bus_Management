{"ast":null,"code":"var _jsxFileName = \"C:\\\\Y3S1\\\\Bus_Management\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      setCurrentUser(user);\n      setIsLoggedIn(true);\n      setUserRole(user.role);\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password, role) => {\n    try {\n      // Try multiple endpoint variations sequentially\n      const possibleEndpoints = [`/Customer/login`,\n      // Original path\n      `/${role}/login`,\n      // Specific role path\n      `/api/${role}/login`,\n      // API prefix with role\n      `/api/auth/login` // General auth endpoint\n      ];\n      let response = null;\n      let successEndpoint = '';\n      let error = null;\n\n      // Try each endpoint until one works\n      for (const endpoint of possibleEndpoints) {\n        try {\n          console.log(`Attempting login with endpoint: ${endpoint}`);\n\n          // For the general auth endpoint, include role in body\n          const data = endpoint === '/api/auth/login' ? {\n            email,\n            password,\n            role\n          } : {\n            email,\n            password\n          };\n          response = await axios.post(endpoint, data);\n          successEndpoint = endpoint;\n          console.log(`Login successful with endpoint: ${endpoint}`);\n          break; // Exit the loop on success\n        } catch (err) {\n          console.log(`Login failed with endpoint: ${endpoint}`, err.message);\n          error = err;\n        }\n      }\n      if (!response) {\n        console.error('All login endpoints failed');\n        // Try a direct approach with whatever backend structure you have\n        try {\n          response = await axios.post('/login', {\n            email,\n            password,\n            role\n          });\n        } catch (finalErr) {\n          // If this also fails, throw the original error\n          throw error || finalErr;\n        }\n      }\n\n      // Extract user data\n      const userData = response.data.user || response.data;\n\n      // Create standardized user object\n      const user = {\n        ...userData,\n        role,\n        token: userData.token || response.data.token\n      };\n      setCurrentUser(user);\n      setIsLoggedIn(true);\n      setUserRole(role);\n      localStorage.setItem('user', JSON.stringify(user));\n      return user;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const register = async (userData, role) => {\n    try {\n      let endpoint = '';\n      switch (role) {\n        case 'customer':\n          endpoint = '/Customer';\n          break;\n        case 'busowner':\n          endpoint = '/BusOwner';\n          break;\n        case 'driver':\n          endpoint = '/Driver';\n          break;\n        case 'conductor':\n          endpoint = '/Conductor';\n          break;\n        default:\n          throw new Error('Invalid role');\n      }\n      const response = await axios.post(endpoint, userData);\n      return response.data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    setIsLoggedIn(false);\n    setUserRole(null);\n    localStorage.removeItem('user');\n  };\n  const value = {\n    currentUser,\n    isLoggedIn,\n    userRole,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"jUvG/qGzxfFd4C4j5hzC0W/zKeo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","isLoggedIn","setIsLoggedIn","userRole","setUserRole","loading","setLoading","storedUser","localStorage","getItem","user","JSON","parse","role","login","email","password","possibleEndpoints","response","successEndpoint","error","endpoint","console","log","data","post","err","message","finalErr","userData","token","setItem","stringify","register","Error","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Y3S1/Bus_Management/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from '../api/axios';\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userRole, setUserRole] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      const user = JSON.parse(storedUser);\r\n      setCurrentUser(user);\r\n      setIsLoggedIn(true);\r\n      setUserRole(user.role);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password, role) => {\r\n    try {\r\n      // Try multiple endpoint variations sequentially\r\n      const possibleEndpoints = [\r\n        `/Customer/login`, // Original path\r\n        `/${role}/login`,  // Specific role path\r\n        `/api/${role}/login`, // API prefix with role\r\n        `/api/auth/login`  // General auth endpoint\r\n      ];\r\n\r\n      let response = null;\r\n      let successEndpoint = '';\r\n      let error = null;\r\n\r\n      // Try each endpoint until one works\r\n      for (const endpoint of possibleEndpoints) {\r\n        try {\r\n          console.log(`Attempting login with endpoint: ${endpoint}`);\r\n          \r\n          // For the general auth endpoint, include role in body\r\n          const data = endpoint === '/api/auth/login' \r\n            ? { email, password, role } \r\n            : { email, password };\r\n            \r\n          response = await axios.post(endpoint, data);\r\n          successEndpoint = endpoint;\r\n          console.log(`Login successful with endpoint: ${endpoint}`);\r\n          break; // Exit the loop on success\r\n        } catch (err) {\r\n          console.log(`Login failed with endpoint: ${endpoint}`, err.message);\r\n          error = err;\r\n        }\r\n      }\r\n\r\n      if (!response) {\r\n        console.error('All login endpoints failed');\r\n        // Try a direct approach with whatever backend structure you have\r\n        try {\r\n          response = await axios.post('/login', { email, password, role });\r\n        } catch (finalErr) {\r\n          // If this also fails, throw the original error\r\n          throw error || finalErr;\r\n        }\r\n      }\r\n\r\n      // Extract user data\r\n      const userData = response.data.user || response.data;\r\n      \r\n      // Create standardized user object\r\n      const user = { \r\n        ...userData,\r\n        role,\r\n        token: userData.token || response.data.token\r\n      };\r\n      \r\n      setCurrentUser(user);\r\n      setIsLoggedIn(true);\r\n      setUserRole(role);\r\n      \r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      return user;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData, role) => {\r\n    try {\r\n      let endpoint = '';\r\n      \r\n      switch(role) {\r\n        case 'customer':\r\n          endpoint = '/Customer';\r\n          break;\r\n        case 'busowner':\r\n          endpoint = '/BusOwner';\r\n          break;\r\n        case 'driver':\r\n          endpoint = '/Driver';\r\n          break;\r\n        case 'conductor':\r\n          endpoint = '/Conductor';\r\n          break;\r\n        default:\r\n          throw new Error('Invalid role');\r\n      }\r\n      \r\n      const response = await axios.post(endpoint, userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    setIsLoggedIn(false);\r\n    setUserRole(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    isLoggedIn,\r\n    userRole,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}